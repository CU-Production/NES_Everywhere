//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (https://www.swig.org).
// Version 4.3.1
//
// Do not make changes to this file unless you know what you are doing - modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------


public class agnes {
  public static byte[] cdata(SWIGTYPE_p_void ptr, uint nelements) {
  global::System.IntPtr mm = global::System.IntPtr.Zero;
  int size = agnesPINVOKE.SWIG_csharp_data(agnesPINVOKE.cdata(SWIGTYPE_p_void.getCPtr(ptr), nelements), ref mm);
  byte[] ret = new byte[size];
  if (size > 0) {
    System.Runtime.InteropServices.Marshal.Copy(mm, ret, 0, size);
  }
  return ret;
}

  public static void memmove(SWIGTYPE_p_void data, byte[] indata) {
    agnesPINVOKE.memmove(SWIGTYPE_p_void.getCPtr(data), agnesPINVOKE.SWIG_csharp_bytes_to_c(indata));
    if (agnesPINVOKE.SWIGPendingException.Pending) throw agnesPINVOKE.SWIGPendingException.Retrieve();
  }

  public static SWIGTYPE_p_agnes agnes_make() {
    global::System.IntPtr cPtr = agnesPINVOKE.agnes_make();
    SWIGTYPE_p_agnes ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_agnes(cPtr, false);
    return ret;
  }

  public static void agnes_destroy(SWIGTYPE_p_agnes agn) {
    agnesPINVOKE.agnes_destroy(SWIGTYPE_p_agnes.getCPtr(agn));
  }

  public static bool agnes_load_ines_data(SWIGTYPE_p_agnes agnes, SWIGTYPE_p_void data, uint data_size) {
    bool ret = agnesPINVOKE.agnes_load_ines_data(SWIGTYPE_p_agnes.getCPtr(agnes), SWIGTYPE_p_void.getCPtr(data), data_size);
    return ret;
  }

  public static void agnes_set_input(SWIGTYPE_p_agnes agnes, agnes_input_t input_1, agnes_input_t input_2) {
    agnesPINVOKE.agnes_set_input(SWIGTYPE_p_agnes.getCPtr(agnes), agnes_input_t.getCPtr(input_1), agnes_input_t.getCPtr(input_2));
  }

  public static uint agnes_state_size() {
    uint ret = agnesPINVOKE.agnes_state_size();
    return ret;
  }

  public static void agnes_dump_state(SWIGTYPE_p_agnes agnes, SWIGTYPE_p_agnes_state out_res) {
    agnesPINVOKE.agnes_dump_state(SWIGTYPE_p_agnes.getCPtr(agnes), SWIGTYPE_p_agnes_state.getCPtr(out_res));
  }

  public static bool agnes_restore_state(SWIGTYPE_p_agnes agnes, SWIGTYPE_p_agnes_state state) {
    bool ret = agnesPINVOKE.agnes_restore_state(SWIGTYPE_p_agnes.getCPtr(agnes), SWIGTYPE_p_agnes_state.getCPtr(state));
    return ret;
  }

  public static bool agnes_tick(SWIGTYPE_p_agnes agnes, SWIGTYPE_p_bool out_new_frame) {
    bool ret = agnesPINVOKE.agnes_tick(SWIGTYPE_p_agnes.getCPtr(agnes), SWIGTYPE_p_bool.getCPtr(out_new_frame));
    return ret;
  }

  public static bool agnes_next_frame(SWIGTYPE_p_agnes agnes) {
    bool ret = agnesPINVOKE.agnes_next_frame(SWIGTYPE_p_agnes.getCPtr(agnes));
    return ret;
  }

  public static agnes_color_t agnes_get_screen_pixel(SWIGTYPE_p_agnes agnes, int x, int y) {
    agnes_color_t ret = new agnes_color_t(agnesPINVOKE.agnes_get_screen_pixel(SWIGTYPE_p_agnes.getCPtr(agnes), x, y), true);
    return ret;
  }

  public static SWIGTYPE_p_void agnes_read_file(string filename, SWIGTYPE_p_size_t out_len) {
    global::System.IntPtr cPtr = agnesPINVOKE.agnes_read_file(filename, SWIGTYPE_p_size_t.getCPtr(out_len));
    SWIGTYPE_p_void ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_void(cPtr, false);
    return ret;
  }

  public static bool agnes_load_ines_data_from_path(SWIGTYPE_p_agnes agnes, string filename) {
    bool ret = agnesPINVOKE.agnes_load_ines_data_from_path(SWIGTYPE_p_agnes.getCPtr(agnes), filename);
    return ret;
  }

  public static readonly int AGNES_VERSION_MAJOR = agnesPINVOKE.AGNES_VERSION_MAJOR_get();
  public static readonly int AGNES_VERSION_MINOR = agnesPINVOKE.AGNES_VERSION_MINOR_get();
  public static readonly int AGNES_VERSION_PATCH = agnesPINVOKE.AGNES_VERSION_PATCH_get();
  public static readonly string AGNES_VERSION_STRING = agnesPINVOKE.AGNES_VERSION_STRING_get();
  public static readonly int AGNES_SCREEN_WIDTH = agnesPINVOKE.AGNES_SCREEN_WIDTH_get();
  public static readonly int AGNES_SCREEN_HEIGHT = agnesPINVOKE.AGNES_SCREEN_HEIGHT_get();

}
